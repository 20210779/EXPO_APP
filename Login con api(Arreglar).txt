import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, Image, Alert } from 'react-native';
import { useFocusEffect } from '@react-navigation/native';
import * as Constantes from '../utils/constantes';

export default function LoginScreen({ navigation }) {
  const [isContra, setIsContra] = useState(true);
  const [usuario, setUsuario] = useState('');
  const [contrasenia, setContrasenia] = useState('');
  const ip = Constantes.IP;

  useFocusEffect(
    React.useCallback(() => {
      validarSesion(); 
    }, [])
  );

  const validarSesion = async () => {
    try {
      const response = await fetch(`${ip}/pemiparts/api/services/admin/usuario.php?action=getUser`, {
        method: 'GET'
      });

      const contentType = response.headers.get('content-type');
      if (!contentType || !contentType.includes('application/json')) {
        const text = await response.text();
        throw new Error(`Expected JSON, but received: ${text}`);
      }

      const data = await response.json();

      if (data.status === 1) {
        navigation.navigate('Home');
        console.log("Se ingresa con la sesión activa");
      } else {
        console.log("No hay sesión activa");
        return;
      }
    } catch (error) {
      console.error(error);
      Alert.alert('Error', 'Ocurrió un error al validar la sesión');
    }
  };

  
  const handlerLogin = async () => {
    if (!usuario || !contrasenia) {
      Alert.alert('Error', 'Por favor ingrese su correo y contraseña');
      return;
    }

    try {
      const formData = new FormData();
      formData.append('correo', usuario);
      formData.append('clave', contrasenia);

      const response = await fetch(`${ip}/pemiparts/api/services/admin/usuario.php?action=logInMovil`, {
        method: 'POST',
        body: formData
      });

      const data = await response.json();

      if (data.status) {
        setContrasenia('');
        setUsuario('');
        navigation.navigate('Home');
      } else {
        console.log(data);
        console.log(usuario);
        console.log(contrasenia);
        Alert.alert('Error sesión', data.error);
      }
    } catch (error) {
      console.error(error, "Error desde Catch");
      Alert.alert('Error', 'Ocurrió un error al iniciar sesión');
    }
  };

  // Definir GoPassword o eliminar el botón si no es necesario
  const GoPassword = () => {
    Alert.alert('Funcionalidad no implementada', 'Recuperar contraseña no está disponible actualmente.');
  };

  useEffect(() => { validarSesion(); }, []);

  return (
    <View style={styles.container}>
      <View style={styles.logoContainer}>
        <Image
          source={require('../../assets/logo_carga.png')}  // Reemplaza con la ruta de tu logo
          style={styles.logo}
        />
      </View>
      <Text style={styles.title}>Ingrese sus credenciales para acceder al programa</Text>
      <TextInput
        placeholder='correo electrónico'
        placeholderTextColor="#ffffff"
        style={styles.input}
        value={usuario}
        keyboardType='email-address'
        onChangeText={setUsuario}
        
      />
      <TextInput
          placeholder='contraseña'
          placeholderTextColor="#ffffff"
          style={styles.input}
          value={contrasenia}
          onChangeText={setContrasenia}
          secureTextEntry={isContra}

      />
      <TouchableOpacity style={styles.button} onPress={GoPassword}>
        <Text style={styles.forgotPassword}>¿Olvidaste tu contraseña?</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.button} onPress={handlerLogin}>
        <Text style={styles.buttonText}>Iniciar</Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#004A8D', // Color de fondo
    padding: 16,
  },
  logoContainer: {
    marginBottom: 20,
  },
  logo: {
    width: 100,
    height: 100,
  },
  title: {
    color: '#ffffff',
    fontSize: 18,
    marginBottom: 20,
    textAlign: 'center',
  },
  input: {
    width: '80%',
    height: 40,
    backgroundColor: '#3388ff',
    borderRadius: 5,
    marginBottom: 10,
    paddingHorizontal: 10,
    color: '#ffffff',
  },
  forgotPassword: {
    color: '#ffffff',
    fontSize: 14,
    marginBottom: 20,
    justifyContent: 'center',
    alignItems: 'center',
  },
  button: {
    width: '80%',
    height: 40,
    backgroundColor: '#00ccff',
    borderRadius: 5,
    marginTop: 10,
    justifyContent: 'center',
    alignItems: 'center',
  },
  buttonText: {
    color: '#ffffff',
    fontSize: 16,
  },
});
